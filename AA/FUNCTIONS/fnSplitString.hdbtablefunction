FUNCTION MES_LIGHT."HANA_TEST.AA.FUNCTIONS::fnSplitString" (iv_split_string Varchar(5000),delimiter Varchar(1) ) 
	RETURNS TABLE (
			"splitdata" VARCHAR(5000)
			)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS
BEGIN
/***************************** 
	Write your function logic
 *****************************/
    DECLARE TEMP_STR VARCHAR(5000) := :iv_split_string || :delimiter;
    DECLARE OUT_VAR VARCHAR(5000) ARRAY;
    DECLARE POS INTEGER :=1;
    DECLARE FLAG INTEGER := 1;
    DECLARE LEFT_STR VARCHAR(5000);

    WHILE(LENGTH(:TEMP_STR) > 0 )
    DO
        LEFT_STR := SUBSTR_BEFORE (:TEMP_STR,:delimiter);
        TEMP_STR := SUBSTR_AFTER (:TEMP_STR,:LEFT_STR || :delimiter);
        OUT_VAR[POS] := LEFT_STR;
        POS := :POS + 1;
    END WHILE;
    
    return_table = UNNEST(:OUT_VAR) as ("splitdata");
    
	RETURN SELECT * FROM :return_table;

	/*RETURN UNNEST(:OUT_VAR);*/
    
END;


/*
USE [MESLight]
GO
	 Object:  UserDefinedFunction [dbo].[fnSplitString]    Script Date: 12/04/2018 15:07:49 
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER FUNCTION [dbo].[fnSplitString] 
( 
    @string NVARCHAR(MAX), 
    @delimiter CHAR(1) 
) 
RETURNS @output TABLE(splitdata NVARCHAR(MAX) 
) 
BEGIN 
    DECLARE @start INT, @end INT 
    SELECT @start = 1, @end = CHARINDEX(@delimiter, @string) 
    WHILE @start < LEN(@string) + 1 BEGIN 
        IF @end = 0  
            SET @end = LEN(@string) + 1
       
        INSERT INTO @output (splitdata)  
        VALUES(SUBSTRING(@string, @start, @end - @start)) 
        SET @start = @end + 1 
        SET @end = CHARINDEX(@delimiter, @string, @start)
        
    END 
    RETURN 
END
*/